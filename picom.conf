#################################
#          Animations           #
#################################
transition-length = 300
transition-pow-x = 0.1
transition-pow-y = 0.1
transition-pow-w = 0.1
transition-pow-h = 0.1
size-transition = true

#################################
#             Corners           #
#################################
corner-radius = 15;
round-borders = 15;

rounded-corners-exclude = [
  "id = 0x20013d",
];

#################################
#             Shadows           #
#################################
shadow-radius = 11;
shadow-opacity = 0.50;
shadow-offset-x = -17;
shadow-offset-y = -5;
shadow-red = 0;
shadow-green = 0;
shadow-blue = 0;
shadow-exclude = [
  "bounding_shaped && !rounded_corners",
  "class_g = 'Conky'",
  "class_g = 'kitty'",
  "class_g = 'Thunar'",
  "class_g = 'firefox'",
  "class_g = 'Spotify'",
  "class_g = 'gimp'",
  "class_g = 'kdenlive'",
  "class_g = 'Rofi'"
];
shadow-ignore-shaped = true;
# xinerama-shadow-crop = true


#################################
#           Fading              #
#################################
fading = true;
fade-in-step = 0.05;
fade-out-step = 0.05;
fade-delta = 6;
no-fading-openclose = false;
no-fading-destroyed-argb = false;


#################################
#   Transparency / Opacity      #
#################################
inactive-opacity = 0.8;
frame-opacity = 0.8;
popup_menu = { opacity = 0.9; }
dropdown_menu = { opacity = 0.9; }
inactive-opacity-override = true;
active-opacity = 1;
inactive-dim = 0.5;

focus-exclude = [
  "id = 0x20013d",
  "class_g = 'Rofi'",
];
inactive-dim-fixed = 0.5
opacity-rule = [
  "100:class_g    = 'kitty'",
  "95:class_g     = 'Spotify'",
  "70:class_g     = 'Rofi'",
  "100:class_g    = 'firefox'",
];


#################################
#     Background-Blurring       #
#################################
# blur-method = "dual_kawase" 
# blur-size = 1
# blur-deviation = false
# blur-background = true;
# blur-background-frame = false;
# blur-background-fixed = false;
# blur-kern = "5,5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1";
# blur-kern = ''
# blur-kern = "3x3box";

blur: {
  method = "kawase";
  strength = 5;
  deviation = 0.1;
  background = false;
  background-frame = false;
  background-fixed = false;
}

blur-background-exclude = [
  "window_type = 'desktop'",
  "class_g = 'slop'",
  "_GTK_FRAME_EXTENTS@:c"
];


#################################
#       General Settings        #
#################################
experimental-backends = true;
backend = "glx";
vsync = true
# dbus = false
# Try to detect WM windows (a non-override-redirect window with no 
# child that has 'WM_STATE') and mark them as active.
# mark-wmwin-focused = false
mark-wmwin-focused = true;
mark-ovredir-focused = true;
detect-rounded-corners = true;
detect-client-opacity = true;
refresh-rate = 60
# sw-opti = 
#use-ewmh-active-win = true
# unredir-if-possible = false
# unredir-if-possible-delay = 0
# unredir-if-possible-exclude = []
detect-transient = true
detect-client-leader = true
# resize-damage = 1
# invert-color-include = []

# GLX backend: Avoid using stencil buffer, useful if you don't have a stencil buffer. 
# Might cause incorrect opacity when rendering transparent content (but never 
# practically happened) and may not work with blur-background. 
# My tests show a 15% performance boost. Recommended.
glx-no-stencil = false

# GLX backend: Avoid rebinding pixmap on window damage. 
# Probably could improve performance on rapid window content changes, 
# but is known to break things on some drivers (LLVMpipe, xf86-video-intel, etc.).
# Recommended if it works.
glx-no-rebind-pixmap = false

# Disable the use of damage information. 
# This cause the whole screen to be redrawn everytime, instead of the part of the screen
# has actually changed. Potentially degrades the performance, but might fix some artifacts.
# The opposing option is use-damage
#
# no-use-damage = false
#use-damage = true (Causing Weird Black semi opaque rectangles when terminal is opened)
#Changing use-damage to false fixes the problem
use-damage = false

# Use X Sync fence to sync clients' draw calls, to make sure all draw 
# calls are finished before picom starts drawing. Needed on nvidia-drivers 
# with GLX backend for some users.
#
# xrender-sync-fence = false

# GLX backend: Use specified GLSL fragment shader for rendering window contents. 
# See `compton-default-fshader-win.glsl` and `compton-fake-transparency-fshader-win.glsl` 
# in the source tree for examples.
#
glx-fshader-win = "compton-fake-transparency-fshader-win.glsl";
force-win-blend = true
# no-ewmh-fullscreen = false
#max-brightness = 1.0
# transparent-clipping = false
#  "trace", "debug", "info", "warn", "error"
log-level = "info";
log-file = "~/picomlogfile";
show-all-xerrors = true
# Write process ID to a file.
# write-pid-path = '/path/to/your/log/file'

# 'WINDOW_TYPE' is one of the 15 window types defined in EWMH standard: 
#     "unknown", "desktop", "dock", "toolbar", "menu", "utility", 
#     "splash", "dialog", "normal", "dropdown_menu", "popup_menu", 
#     "tooltip", "notification", "combo", and "dnd".
#   fade, shadow:::
#   opacity:::
#   focus:::
#   full-shadow:::
#   redir-ignore:::
wintypes:
{
  normal = { fade: true, shadow = true };
  tooltip = { fade = true; shadow = true; opacity = 0.75; focus = true; };
  dock = { shadow = true; }
  dnd = { shadow = true; }
  popup_menu = { opacity = 0.8; }
  dropdown_menu = { opacity = 0.8; }
};
